{"version":3,"sources":["redux/actions.ts","redux/reducers/rom.ts","redux/reducers/index.ts","redux/store.ts","utils/roms.ts","views/RomList.jsx","constants.ts","views/Emulator.jsx","views/App.tsx","Root.tsx","index.tsx"],"names":["SET_ROM","selectedRom","state","action","type","payload","rom","combineReducers","store","createStore","reducers","roms","id","name","uri","connect","setRom","props","dropdownStyles","control","provided","background","boxShadow","border","color","borderRadius","borderColor","indicatorSeparator","singleValue","noOptionsMessage","input","placeholder","dropdownIndicator","_state","menu","margin","borderTop","option","isFocused","isSelected","pickRom","useCallback","item","getRoms","useMemo","map","label","value","sort","a","b","localeCompare","className","options","onChange","styles","canvasConfig","width","SCREEN_WIDTH","height","SCREEN_HEIGHT","backgroundColor","foregroundColor","keypad","1","2","3","4","q","w","e","r","s","d","f","z","x","c","v","Emulator","canvasRef","React","createRef","canvasWrapperRef","animationFrame","keypadMask","cpu","cancelAnimationFrame","this","console","log","axios","get","responseType","res","romBuffer","Uint8Array","data","chip8","CHIP8","new","document","addEventListener","onKeyPress","then","Date","now","cyclesPerFrame","loop","i","run_cycle","set_keypad","decrement_timers","context","current","getContext","clearRect","y","Math","floor","get_vram","fillRect","stroke","requestAnimationFrame","event","key","undefined","status","set_register","set_running","fillStyle","strokeStyle","lineWidth","canvas","style","scale","removeEventListener","resetCanvas","start","ref","Component","App","useSelector","Root","render","getElementById"],"mappings":"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","file":"static/js/main.27f6c721.chunk.js","sourcesContent":["import { Rom } from \"../utils/roms\";\n\nexport const SET_ROM = \"SET_ROM\";\nexport const GET_ROM = \"GET_ROM\";\n\nexport const setRom = (rom: Rom) => ({\n  type: SET_ROM,\n  payload: rom,\n});\n","import { SET_ROM } from \"../actions\";\nimport { Rom } from \"../../utils/roms\";\n\nexport interface selectRomAction {\n  type: string;\n  payload: { rom: Rom };\n}\n\nconst selectedRom = (state = null, action: selectRomAction) => {\n  switch (action.type) {\n    case SET_ROM:\n      return action.payload.rom;\n    default:\n      return state;\n  }\n};\nexport default selectedRom;\n","import { combineReducers } from \"redux\"\n\nimport selectedRom from \"./rom\"\n\nexport default combineReducers({selectedRom})\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers)\n\nexport default store;\n","export interface Rom {\n  id: Number;\n  name: string;\n  uri: string;\n}\n\nconst roms: Rom[] = [\n  { id: 0, name: \"Tic-Tac-Toe\", uri: \"/roms/TICTACTOE\" },\n  { id: 1, name: \"Maze\", uri: \"/roms/MAZE\" },\n  { id: 2, name: \"Life\", uri: \"/roms/LIFE\" },\n  { id: 3, name: \"Tetris\", uri: \"/roms/TETRIS\" },\n  { id: 4, name: \"Tank\", uri: \"/roms/TANK\" },\n  { id: 5, name: \"Tron\", uri: \"/roms/TRON\" },\n  { id: 6, name: \"Pong\", uri: \"/roms/PONG\" },\n  { id: 7, name: \"Brix\", uri: \"/roms/BRIX\" },\n  { id: 8, name: \"Kaleid\", uri: \"/roms/KALEID\" },\n  { id: 9, name: \"Merlin\", uri: \"/roms/MERLIN\" },\n  { id: 10, name: \"Wipe Off\", uri: \"/roms/WIPEOFF\" },\n  { id: 11, name: \"Vers\", uri: \"/roms/VERS\" },\n  { id: 12, name: \"Guess\", uri: \"/roms/GUESS\" },\n  { id: 13, name: \"Hidden\", uri: \"/roms/HIDDEN\" },\n  { id: 14, name: \"Invaders\", uri: \"/roms/INVADERS\" },\n  { id: 15, name: \"Puzzle\", uri: \"/roms/PUZZLE\" },\n  { id: 16, name: \"UFO\", uri: \"/roms/UFO\" },\n];\n\nexport default roms;\n","import { useCallback, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./RomList.scss\";\n\nimport Select from \"react-select\";\n\nimport { setRom } from \"../redux/actions\";\n\nconst RomList = (props) => {\n  const dropdownStyles = {\n    control: (provided, state) => ({\n      ...provided,\n      background: \"#000\",\n      boxShadow: \"none\",\n      border: \"2px solid\",\n      color: \"#32ff6660\",\n      borderRadius: 0,\n      \"&:hover\": {\n        borderColor: \"#32ff66\",\n      },\n    }),\n    indicatorSeparator: (provided) => ({\n      ...provided,\n      background: \"#32ff6660\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: \"#32ff66\",\n    }),\n    noOptionsMessage: (provided) => ({\n      ...provided,\n      color: \"#32ff66\",\n    }),\n    input: (provided) => ({\n      ...provided,\n      color: \"#32ff66\",\n    }),\n    placeholder: (provided) => ({\n      ...provided,\n      color: \"#32ff6660\",\n    }),\n    dropdownIndicator: (provided, _state) => ({\n      ...provided,\n      color: \"#32ff66\",\n      \"&:hover\": {\n        color: \"#32ff66bf\",\n      },\n    }),\n    menu: (provided, _state) => ({\n      ...provided,\n      background: \"#000\",\n      margin: 0,\n      border: \"2px solid #32ff6660\",\n      borderTop: 0,\n      borderRadius: 0,\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      background: state.isFocused || state.isSelected ? \"#32ff6610\" : \"#000\",\n      color: state.isFocused ? \"#32ff66\" : \"#32ff6660\",\n      \":active\": {\n        background: \"#32ff6650\",\n      },\n    }),\n  };\n\n  const pickRom = useCallback(\n    (item) => {\n      props.setRom({ rom: item.rom });\n    },\n    [props]\n  );\n\n  const getRoms = useMemo(() => {\n    return props.roms\n      .map((rom) => ({\n        label: rom.name,\n        value: rom.id,\n        rom,\n      }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  }, [props.roms]);\n\n  return (\n    <div className=\"rom-list\">\n      <Select\n        options={getRoms}\n        onChange={pickRom}\n        styles={dropdownStyles}\n        placeholder=\"Select a ROM...\"\n      />\n    </div>\n  );\n};\n\nexport default connect(null, { setRom })(RomList);\n","export const SCREEN_WIDTH = 64;\nexport const SCREEN_HEIGHT = 32;\nexport const SCREEN_SCALE = 9;\n\nexport const canvasConfig = {\n  width: SCREEN_WIDTH * SCREEN_SCALE,\n  height: SCREEN_HEIGHT * SCREEN_SCALE,\n  backgroundColor: \"#000000\",\n  foregroundColor: \"#32FF66\",\n};\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport \"./Emulator.scss\";\n\nimport {\n  canvasConfig,\n  SCREEN_HEIGHT,\n  SCREEN_SCALE,\n  SCREEN_WIDTH,\n} from \"../constants\";\nimport selectedRom from \"../redux/reducers/rom\";\n\nconst keypad = {\n  1: 0x1,\n  2: 0x2,\n  3: 0x3,\n  4: 0xc,\n  q: 0x4,\n  w: 0x5,\n  e: 0x6,\n  r: 0xd,\n  a: 0x7,\n  s: 0x8,\n  d: 0x9,\n  f: 0xe,\n  z: 0xa,\n  x: 0x0,\n  c: 0xb,\n  v: 0xf,\n};\n\nclass Emulator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n    this.canvasWrapperRef = React.createRef();\n\n    this.animationFrame = 0;\n    this.keypadMask = 0;\n    this.cpu = null;\n  }\n\n  async start() {\n    cancelAnimationFrame(this.animationFrame);\n    if (!this.props.rom) return;\n\n    console.log(`Starting ${this.props.rom.name}`);\n\n    const res = await axios.get(this.props.rom.uri, {\n      responseType: \"arraybuffer\",\n    });\n    const romBuffer = new Uint8Array(res.data);\n\n    let chip8 = await import(\"chip8\");\n    this.cpu = chip8.CHIP8.new(romBuffer);\n\n    document.addEventListener(\n      \"keydown\",\n      this.onKeyPress(this.cpu)\n    );\n\n    let then = Date.now();\n    // Pong needs to run a little bit slower\n    const cyclesPerFrame = this.props.rom.name === \"Pong\" ? 20 : 100\n\n    const loop = () => {\n      if (Date.now() - then >= 1000 / 60) {\n        for (let i = 0; i < cyclesPerFrame; i++) {\n          this.cpu.run_cycle();\n        }\n\n        this.keypadMask = 0;\n        this.cpu.set_keypad(0);\n\n        this.cpu.decrement_timers();\n\n        let context = this.canvasRef.current.getContext(\"2d\");\n\n        context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n        for (let i = 0; i < 64 * 32; i++) {\n          const x = i % 64;\n          const y = Math.floor(i / 64);\n\n          if (this.cpu.get_vram(i) === 1) {\n            context.fillRect(x, y, 1, 1);\n          }\n        }\n        context.stroke();\n\n        then = Date.now();\n      }\n\n      this.animationFrame = requestAnimationFrame(loop);\n    };\n\n    this.animationFrame = requestAnimationFrame(loop);\n  }\n\n  onKeyPress(cpu) {\n    return (event) => {\n      const key = keypad[event.key];\n      if (cpu && key !== undefined) {\n        const status = cpu.status();\n        if (status >= 0) {\n          cpu.set_register(status, key);\n          cpu.set_running();\n        }\n        this.keypadMask |= 1 << key;\n        this.cpu.set_keypad(this.keypadMask);\n      }\n    };\n  }\n\n  resetCanvas() {\n    const context = this.canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasConfig.width, canvasConfig.height);\n    context.fillStyle = canvasConfig.foregroundColor;\n\n    context.strokeStyle = \"#31363b\";\n    context.lineWidth = 0.05;\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n\n    canvas.width = SCREEN_WIDTH * SCREEN_SCALE;\n    canvas.height = SCREEN_HEIGHT * SCREEN_SCALE;\n\n    canvas.style.background = canvasConfig.backgroundColor;\n\n    const context = canvas.getContext(\"2d\");\n\n    context.fillStyle = canvasConfig.foregroundColor;\n    context.scale(SCREEN_SCALE, SCREEN_SCALE);\n  }\n\n  componentDidUpdate() {\n    document.removeEventListener(\"keydown\", this.onKeyPress);\n    this.resetCanvas();\n    this.start();\n  }\n\n  render() {\n    return (\n      <div ref={this.canvasWrapperRef} className=\"canvas-wrapper\">\n        <canvas ref={this.canvasRef}></canvas>\n      </div>\n    );\n  }\n}\n\nexport default Emulator;\n","import \"./App.scss\";\n\nimport roms from \"../utils/roms\";\nimport RomList from \"./RomList\";\n\nimport Emulator from \"./Emulator\";\nimport { useSelector } from \"react-redux\";\n\nconst App = () => {\n  const selectedRom = useSelector((store: any) => store.selectedRom);\n\n  return (\n    <div className=\"app\">\n      <div className=\"logo\">\n        <h1>CHIP-8</h1>\n      </div>\n      <main className=\"container\">\n        <section className=\"roms content-center\">\n          <RomList roms={roms} />\n        </section>\n        <section className=\"emulator content-center\">\n          <Emulator rom={selectedRom} />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { Provider as ReduxProvider } from \"react-redux\";\n\nimport store from './redux/store'\n\nimport App from \"./views/App\";\n\nfunction Root() {\n  return (\n    <>\n      <ReduxProvider store={store}>\n        <App />\n      </ReduxProvider>\n    </>\n  );\n}\n\nexport default Root;\n","import React from \"react\";\nimport {render} from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport Root from \"./Root\";\n\nrender(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}