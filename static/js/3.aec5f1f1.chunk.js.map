{"version":3,"sources":["../wasm-build/index_bg.js","../wasm-build/index.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","initialize","WASM_VECTOR_LEN","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","cachegetUint16Memory0","getArrayU16FromWasm0","Uint16Array","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","handleError","f","apply","this","arguments","e","CHIP8","__destroy_into_raw","offset","retptr","r0","r1","v0","slice","mask","x","value","Object","create","prototype","rom","ptr0","malloc","passArray8ToWasm0","len0","__wrap","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","realloc","mem","code","charCodeAt","passStringToWasm0","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbg_getRandomValues_57e4008f45f0e105","getRandomValues","__wbg_randomFillSync_d90848a552cbd666","arg2","randomFillSync","__wbg_static_accessor_MODULE_39947eb3fe77895f","__wbg_self_f865985e662246aa","self","__wbg_require_c59851dfa0dc7e78","__wbg_crypto_bfb05100db79193b","crypto","__wbg_msCrypto_f6dddc6ae048b7e2","msCrypto","__wbindgen_is_undefined","__wbg_buffer_ebc6c8e75510eae3","__wbg_new_135e963dedf67b22","__wbg_set_4a5072a31008e0cb","__wbg_length_317f0dd77f7a6673","__wbg_newwithlength_78dc302d31527318","__wbg_subarray_34c228a45c72d146","__wbindgen_throw","__wbindgen_memory"],"mappings":"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","file":"static/js/3.aec5f1f1.chunk.js","sourcesContent":["import * as wasm from './index_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n/**\n*/\nexport function initialize() {\n    wasm.initialize();\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachegetUint16Memory0 = null;\nfunction getUint16Memory0() {\n    if (cachegetUint16Memory0 === null || cachegetUint16Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint16Memory0 = new Uint16Array(wasm.memory.buffer);\n    }\n    return cachegetUint16Memory0;\n}\n\nfunction getArrayU16FromWasm0(ptr, len) {\n    return getUint16Memory0().subarray(ptr / 2, ptr / 2 + len);\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n/**\n*/\nexport class CHIP8 {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CHIP8.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_chip8_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} rom\n    * @returns {CHIP8}\n    */\n    static new(rom) {\n        var ptr0 = passArray8ToWasm0(rom, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.chip8_new(ptr0, len0);\n        return CHIP8.__wrap(ret);\n    }\n    /**\n    * @param {number} offset\n    * @returns {number}\n    */\n    rb(offset) {\n        var ret = wasm.chip8_rb(this.ptr, offset);\n        return ret;\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    dump_heap() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.chip8_dump_heap(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} offset\n    * @returns {number}\n    */\n    get_vram(offset) {\n        var ret = wasm.chip8_get_vram(this.ptr, offset);\n        return ret;\n    }\n    /**\n    * @param {number} mask\n    */\n    set_keypad(mask) {\n        wasm.chip8_set_keypad(this.ptr, mask);\n    }\n    /**\n    * @returns {number}\n    */\n    status() {\n        var ret = wasm.chip8_status(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    set_running() {\n        wasm.chip8_set_running(this.ptr);\n    }\n    /**\n    */\n    run_cycle() {\n        wasm.chip8_run_cycle(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    pc() {\n        var ret = wasm.chip8_pc(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    sp() {\n        var ret = wasm.chip8_sp(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @returns {number}\n    */\n    register(x) {\n        var ret = wasm.chip8_register(this.ptr, x);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} value\n    */\n    set_register(x, value) {\n        wasm.chip8_set_register(this.ptr, x, value);\n    }\n    /**\n    * @returns {number}\n    */\n    i() {\n        var ret = wasm.chip8_i(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    delay() {\n        var ret = wasm.chip8_delay(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    sound() {\n        var ret = wasm.chip8_sound(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {Uint16Array}\n    */\n    stack() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.chip8_stack(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU16FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 2);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    */\n    decrement_timers() {\n        wasm.chip8_decrement_timers(this.ptr);\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_getRandomValues_57e4008f45f0e105 = handleError(function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n});\n\nexport const __wbg_randomFillSync_d90848a552cbd666 = handleError(function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n});\n\nexport const __wbg_static_accessor_MODULE_39947eb3fe77895f = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_self_f865985e662246aa = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_require_c59851dfa0dc7e78 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n});\n\nexport const __wbg_crypto_bfb05100db79193b = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_msCrypto_f6dddc6ae048b7e2 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_buffer_ebc6c8e75510eae3 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_135e963dedf67b22 = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_set_4a5072a31008e0cb = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport const __wbg_length_317f0dd77f7a6673 = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __wbg_newwithlength_78dc302d31527318 = function(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_subarray_34c228a45c72d146 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","import * as wasm from \"./index_bg.wasm\";\nexport * from \"./index_bg.js\";"],"sourceRoot":""}